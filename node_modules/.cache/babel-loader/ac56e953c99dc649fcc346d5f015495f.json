{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alexbennett/Desktop/JOB/err-sketch/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\nconst queryClient = new QueryClient();\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\n\nfunction Example() {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"repoData\", () => fetch(\"https://api.github.com/repos/tannerlinsley/react-query\").then(res => res.json()));\n  if (isLoading) return \"Loading...\";\n  if (error) return \"An error has occurred: \" + error.message;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [\"\\uD83D\\uDC40 \", data.subscribers_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [\"\\u2728 \", data.stargazers_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [\"\\uD83C\\uDF74 \", data.forks_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Example, \"P7jBIA24rc00P7RvfXjpVl6dqRI=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Example;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Example\");","map":{"version":3,"sources":["/Users/alexbennett/Desktop/JOB/err-sketch/src/App.js"],"names":["QueryClient","QueryClientProvider","useQuery","queryClient","App","Example","isLoading","error","data","fetch","then","res","json","message","name","description","subscribers_count","stargazers_count","forks_count"],"mappings":";;;;;AAAA,SAASA,WAAT,EAAsBC,mBAAtB,EAA2CC,QAA3C,QAA2D,aAA3D;AAEA,MAAMC,WAAW,GAAG,IAAIH,WAAJ,EAApB;AAEA,eAAe,SAASI,GAAT,GAAe;AAC5B,sBACE,QAAC,mBAAD;AAAqB,IAAA,MAAM,EAAED,WAA7B;AAAA,2BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KANuBC,G;;AAQxB,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BN,QAAQ,CAAC,UAAD,EAAa,MACtDO,KAAK,CACH,wDADG,CAAL,CAEEC,IAFF,CAEQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFhB,CADyC,CAA3C;AAMA,MAAIN,SAAJ,EAAe,OAAO,YAAP;AAEf,MAAIC,KAAJ,EAAW,OAAO,4BAA4BA,KAAK,CAACM,OAAzC;AAEX,sBACE;AAAA,4BACE;AAAA,gBAAKL,IAAI,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIN,IAAI,CAACO;AAAT;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,kCAAYP,IAAI,CAACQ,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAG+C,GAH/C,eAIE;AAAA,4BAAWR,IAAI,CAACS,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAI6C,GAJ7C,eAKE;AAAA,kCAAYT,IAAI,CAACU,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GApBQb,O;UAC4BH,Q;;;MAD5BG,O","sourcesContent":["import { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nexport default function App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Example />\n    </QueryClientProvider>\n  );\n}\n\nfunction Example() {\n  const { isLoading, error, data } = useQuery(\"repoData\", () =>\n    fetch(\n      \"https://api.github.com/repos/tannerlinsley/react-query\"\n    ).then((res) => res.json())\n  );\n\n  if (isLoading) return \"Loading...\";\n\n  if (error) return \"An error has occurred: \" + error.message;\n\n  return (\n    <div>\n      <h1>{data.name}</h1>\n      <p>{data.description}</p>\n      <strong>üëÄ {data.subscribers_count}</strong>{\" \"}\n      <strong>‚ú® {data.stargazers_count}</strong>{\" \"}\n      <strong>üç¥ {data.forks_count}</strong>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}